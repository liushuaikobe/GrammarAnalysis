program -> [external_declaration, program']
external_declaration -> [function_definition]
function_definition -> [type_specifier, declarator_for_fun, compound_statement]
type_specifier -> [INT]
declarator_for_fun -> [IDN, (, declarator_for_fun']
declarator_for_fun' -> [)]
compound_statement -> [{, compound_statement']
compound_statement' -> [declaration_list, statement_list, }]
declaration_list -> [declaration, declaration_list']
declaration -> [type_specifier, init_declarator, declaration']
type_specifier -> [INT]
init_declarator -> [declarator, init_declarator']
declarator -> [IDN, declarator']
declarator' -> [$]
init_declarator' -> [=, initializer]
initializer -> [assigment_expression]
assigment_expression -> [const_expression, assigment_expression']
const_expression -> [CONST_INT]
assigment_expression' -> [$]
declaration' -> [,, init_declarator, declaration']
init_declarator -> [declarator, init_declarator']
declarator -> [IDN, declarator']
declarator' -> [[, CONST_INT, ], declarator']
declarator' -> [$]
init_declarator' -> [=, initializer]
initializer -> [{, const_expression_list, }]
const_expression_list -> [const_expression, const_expression_list']
const_expression -> [CONST_INT]
const_expression_list' -> [,, const_expression, const_expression_list']
const_expression -> [CONST_INT]
const_expression_list' -> [,, const_expression, const_expression_list']
const_expression -> [CONST_INT]
const_expression_list' -> [$]
declaration' -> [,, init_declarator, declaration']
init_declarator -> [declarator, init_declarator']
declarator -> [IDN, declarator']
declarator' -> [$]
init_declarator' -> [$]
declaration' -> [,, init_declarator, declaration']
init_declarator -> [declarator, init_declarator']
declarator -> [IDN, declarator']
declarator' -> [$]
init_declarator' -> [$]
declaration' -> [,, init_declarator, declaration']
init_declarator -> [declarator, init_declarator']
declarator -> [IDN, declarator']
declarator' -> [$]
init_declarator' -> [$]
declaration' -> [$]
declaration_list' -> [$]
statement_list -> [statement, statement_list']
statement -> [expression_statement]
expression_statement -> [;]
statement_list' -> [statement, statement_list']
statement -> [expression_statement]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_FLOAT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement_list' -> [statement, statement_list']
statement -> [expression_statement]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [*, cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [(, expression, )]
expression -> [assigment_expression, expression']
assigment_expression -> [const_expression, assigment_expression']
const_expression -> [CONST_INT]
assigment_expression' -> [+, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement_list' -> [statement, statement_list']
statement -> [expression_statement]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
ERROR,-Ignore Char : +
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [*, cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [(, expression, )]
expression -> [assigment_expression, expression']
assigment_expression -> [const_expression, assigment_expression']
const_expression -> [CONST_INT]
assigment_expression' -> [-, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement_list' -> [statement, statement_list']
statement -> [iteration_statement]
iteration_statement -> [FOR, (, expression_statement, expression_statement, expression, ), statement]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [,, assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [assigment_expression']
assigment_expression' -> [<, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [OR_OP, logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [>, shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [+, multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [,, assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [-, multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement -> [compound_statement]
compound_statement -> [{, compound_statement']
compound_statement' -> [statement_list, }]
statement_list -> [statement, statement_list']
statement -> [iteration_statement]
iteration_statement -> [WHILE, (, expression, ), statement]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [assigment_expression']
assigment_expression' -> [<, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement -> [compound_statement]
compound_statement -> [{, compound_statement']
compound_statement' -> [statement_list, }]
statement_list -> [statement, statement_list']
statement -> [expression_statement]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [+, multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement_list' -> [$]
statement_list' -> [statement, statement_list']
statement -> [selection_statement]
selection_statement -> [IF, (, expression, ), statement, selection_statement']
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [assigment_expression']
assigment_expression' -> [==, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [AND_OP, equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [[, expression, ], postfix_expression']
expression -> [assigment_expression, expression']
assigment_expression -> [const_expression, assigment_expression']
const_expression -> [CONST_INT]
assigment_expression' -> [$]
expression' -> [$]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [!=, relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [const_expression]
const_expression -> [CONST_INT]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement -> [compound_statement]
compound_statement -> [{, compound_statement']
compound_statement' -> [statement_list, }]
statement_list -> [statement, statement_list']
statement -> [expression_statement]
expression_statement -> [expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [=, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [(, const_expression_list, )]
const_expression_list -> [const_expression, const_expression_list']
const_expression -> [CONST_INT]
const_expression_list' -> [,, const_expression, const_expression_list']
const_expression -> [CONST_INT]
const_expression_list' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement_list' -> [statement, statement_list']
statement -> [jump_statement]
jump_statement -> [BREAK, ;]
statement_list' -> [$]
selection_statement' -> [$]
statement_list' -> [$]
statement_list' -> [$]
program' -> [external_declaration, program']
external_declaration -> [function_definition]
function_definition -> [type_specifier, declarator_for_fun, compound_statement]
type_specifier -> [INT]
declarator_for_fun -> [IDN, (, declarator_for_fun']
declarator_for_fun' -> [parameter_list, )]
parameter_list -> [parameter_declaration, parameter_list']
parameter_declaration -> [type_specifier, IDN]
type_specifier -> [INT]
parameter_list' -> [,, parameter_declaration, parameter_list']
parameter_declaration -> [type_specifier, IDN]
type_specifier -> [INT]
parameter_list' -> [$]
compound_statement -> [{, compound_statement']
compound_statement' -> [statement_list, }]
statement_list -> [statement, statement_list']
statement -> [jump_statement]
jump_statement -> [RETURN, expression, ;]
expression -> [assigment_expression, expression']
assigment_expression -> [IDN, assigment_expression'']
assigment_expression'' -> [assigment_expression']
assigment_expression' -> [*, logical_or_expression]
logical_or_expression -> [logical_and_expression, logical_or_expression']
logical_and_expression -> [equality_expression, logical_and_expression']
equality_expression -> [relational_expression, equality_expression']
relational_expression -> [shift_expression, relational_expression']
shift_expression -> [multiplicative_expression, shift_expression']
multiplicative_expression -> [cast_expression, multiplicative_expression']
cast_expression -> [postfix_expression]
postfix_expression -> [primary_expression, postfix_expression']
primary_expression -> [IDN]
postfix_expression' -> [$]
multiplicative_expression' -> [$]
shift_expression' -> [$]
relational_expression' -> [$]
equality_expression' -> [$]
logical_and_expression' -> [$]
logical_or_expression' -> [$]
expression' -> [$]
statement_list' -> [$]
program' -> [$]
